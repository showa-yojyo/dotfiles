======================================================================
プライベートドットファイル
======================================================================
これはいわゆるドットファイルのためのリポジトリーだが、
現在想定している環境は Windows + Cygwin であり、そこではシェルは `bash`
しか用いない。

以下は完全に自分用のメモだ。

管理外ファイル
======================================================================
現在、次の構成ファイル群はバージョン管理下にない。
理由は内容が各種パスワードを含んでいるか、管理するに及ばないかのどちらかだ。

* `.bash_history`: 履歴データなので除外。
* `.conda/`: 管理の必要がないはず。
* `.gimp-2.8/`: 調査中。カスタムブラシとかなのでバージョン管理したいと言えばしたい。
* `.gnupg/`: 機密情報含むため除外。
* `.ipynb_checkpoints/`: 管理の必要がないはず。
* `.my_app_credentials`: Twitter スクリプトで使う認証情報を含むため除外。
* `.netrc`: 認証情報を含むため除外。
* `.opentweenrc/`: OpenTween のカスタム版の構成ファイル群格納ディレクトリー。機密情報含むため除外。
* `.pylint.d/`: 管理の必要がないはず。
* `.python_history`: 履歴データなので除外。
* `.ssh/`: 機密情報含むため除外。
* `.subversion/`: 機密情報含むため除外。
* `.thumbnails/`: 単なるキャッシュデータ。
* `.twitter_log_oauth`: Twitter スクリプトで使う認証情報を含むため除外。
* `.twitter_oauth`: Twitter スクリプトで使う認証情報を含むため除外。
* `.twitter-archiver_oauth`: Twitter スクリプトで使う認証情報を含むため除外。
* `.twitter-follow_oauth`: Twitter スクリプトで使う認証情報を含むため除外。

ただしバックアップが必要であることは変わりはないので、どうにかしないといけない。

シンボリックリンク
======================================================================
DOS プロンプトから `mklink` コマンドを用いて、
ローカルリポジトリ―の各ファイルへのシンボリックリンクを定義する。
なお `mklink` コマンドを実行するには管理人権限が必要だ。
`%HOME%` 直下に当リポジトリーがある場合の例を示す。

::

  %HOME%> cd %HOME%
  %HOME%> mklink .bashrc .\dotfiles\.bashrc
  %HOME%> mklink /D .ipython .\dotfiles\.ipython

既にシンボリックリンクが定義されている場合は、いったんリンクを削除してから
上のコマンドを実行する必要がある。このときディレクトリー型の扱いには注意を
要する。`del` ではなく `rmdir` でリンクを削除しないと、対象そのものを削除する。
この挙動がたいへん危なっかしいので、シンボリックリンクを再設定する
バッチファイルを作成するのが望ましいのだが、DOS のスクリプトをまともに書けないので
現在は保留している。

Visual Studio Code
----------------------------------------------------------------------

VS Code の構成ファイル群については暫定的に下記シンボリックリンクで運用するものとする：

::

  %HOME%> cd %HOME%
  %HOME%> mklink /D %APPDATA%\Code\User .\dotfiles\.config\Code\User
