# ~/.bash_profile: executed by bash(1) for login shells.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
umask 022

# original code by Bash Guide for Beginners
function _munge_path
{
    local a_path="$1"
    local first_or_last="$2"

    if [[ ! -d "$a_path" ]]; then
        echo Warning: $a_path is not directory. >&2
        return
    fi

    if [[ $PATH =~ (^|:)$a_path($|:) ]] ; then
        return
    fi

    if [[ $first_or_last == first ]]; then
        PATH="$a_path${PATH:+:${PATH}}"
    else
        PATH="${PATH:+${PATH}:$a_path}"
    fi
}

# remove all /mnt/c/path/to/something from $PATH
PATH="$(echo -e ${PATH//:/\\n} | grep -v ^/mnt/c/ | tr \\n :)"
PATH="${PATH%:}"

# Homebrew
for private_dir in "$HOME/.linuxbrew" "/home/linuxbrew/.linuxbrew"; do
    if [ -d "$private_dir" ] ; then
        eval $("$private_dir/bin/brew" shellenv)
    fi
done
unset private_dir

# source the users bashrc if it exists
declare bash_config_home="${XDG_HOME_CONFIG:-$HOME/.config}/bash"
if [ -f "$bash_config_home/bashrc" ]; then
    source "$bash_config_home/bashrc"
elif [ -f "$HOME/.bashrc" ]; then
    source "$HOME/.bashrc"
fi
unset bash_config_home

# Set MANPATH so it includes users' private man if it exists
if [ -d "${HOME}/man" ]; then
    MANPATH="${HOME}/man:${MANPATH}"
fi

# Set INFOPATH so it includes users' private info if it exists
if [ -d "${HOME}/info" ]; then
    INFOPATH="${HOME}/info:${INFOPATH}"
fi

case "$OSTYPE" in
    linux*)
        test -v GEM_HOME && _munge_path "$GEM_HOME/bin" first

        if [[ -n "$WSL_DISTRO_NAME" ]]; then
            _prefix=/mnt/c
            _munge_path "$_prefix/Program Files/Microsoft VS Code/bin"
            _munge_path "$_prefix/WINDOWS/System32"
            _munge_path "$_prefix/WINDOWS/System32"
            _munge_path "$_prefix/WINDOWS/System32"
            unset _prefix
        fi
        ;;
    *)
        echo Warning: $OSTYPE not supported >&2
        ;;
esac

unset -f _munge_path

# set PATH so it includes user's private bin if it exists
for private_dir in "$HOME/.local/bin" "$HOME/bin"; do
    if [ -d "$private_dir" ] ; then
        PATH="$private_dir:$PATH"
        break
    fi
done
unset private_dir
